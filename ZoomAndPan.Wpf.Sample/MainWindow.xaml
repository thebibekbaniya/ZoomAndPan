<Window x:Class="ZoomAndPan.Wpf.Sample.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ZoomAndPan.Wpf.Sample"
        xmlns:zoomAndPan="clr-namespace:ZoomAndPan.Wpf;assembly=ZoomAndPan.Wpf"
        xmlns:system="clr-namespace:System;assembly=System.Runtime"
        FocusManager.FocusedElement="{Binding ElementName=ZoomAndPanControl}"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">

    <!--Styling Elements For Zoom and Pan Control-->
    <Window.Resources>
        <!--
        Default style and template for the ZoomAndPanControl.
    -->
        <Style TargetType="{x:Type zoomAndPan:ZoomAndPanControl}">
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Background" Value="#80C0C0C0" />
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type zoomAndPan:ZoomAndPanControl}">
                        <Grid>
                            <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">

                                <!--
                                The ContentPresenter is used to scale and offset the content of ZoomAndPanControl.
                                
                                A transforms computed from 'ViewportZoom', 'ContentOffsetX' and 'ContentOffsetY' are assigned
                                to the 'RenderTransform' property in OnApplyTemplate in ZoomAndPanControl.cs.
                                
                                The alignment is set to top-left.  This allows the content offset to be used to place
                                the content in the center of the viewport when the viewport is bigger than the content.
                            -->
                                <ContentPresenter x:Name="PART_Content"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Top" />

                            </Border>

                            <Canvas x:Name="PART_DragZoomCanvas"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Visibility="Collapsed">
                                <Border x:Name="PART_DragZoomBorder"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="1" />
                            </Canvas>
                        </Grid>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type zoomAndPan:ZoomAndPanScrollViewer}">
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Background" Value="#80C0C0C0" />
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type zoomAndPan:ZoomAndPanScrollViewer}">
                        <ScrollViewer x:Name="PART_ZoomAndPanScrollViewer"
                                  CanContentScroll="True"
                                  HorizontalScrollBarVisibility="Auto"
                                  VerticalScrollBarVisibility="Auto">
                            <zoomAndPan:ZoomAndPanControl x:Name="PART_ZoomAndPanControl"
                                                      Background="{TemplateBinding Background}"
                                                      BorderBrush="{TemplateBinding BorderBrush}"
                                                      BorderThickness="{TemplateBinding BorderThickness}"
                                                      MinimumZoomType="{TemplateBinding MinimumZoomType}"
                                                      MousePosition="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=OneWayToSource, Path=MousePosition}"
                                                      UseAnimations="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay, Path=UseAnimations}"
                                                      ViewportZoom="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Path=ViewportZoom}"
                                                      ZoomAndPanInitialPosition="{TemplateBinding ZoomAndPanInitialPosition}">
                                <ContentPresenter HorizontalAlignment="Left"
                                              VerticalAlignment="Top"
                                              Content="{TemplateBinding Content}" />

                            </zoomAndPan:ZoomAndPanControl>
                        </ScrollViewer>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--
        Default style and template for the ZoomAndPanViewBox.
    -->
        <Style TargetType="{x:Type zoomAndPan:ZoomAndPanViewBox}">
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Background" Value="#80C0C0C0" />
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type zoomAndPan:ZoomAndPanViewBox}">
                        <Viewbox>
                            <Canvas Name="PART_Content"
                                Width="{Binding Path=Content.ActualWidth}"
                                Height="{Binding Path=Content.ActualHeight}">
                                <Border Name="PART_DraggingBorder"
                                    Canvas.Left="{Binding Path=ZoomAndPanContent.ContentOffsetX, Mode=TwoWay}"
                                    Canvas.Top="{Binding Path=ZoomAndPanContent.ContentOffsetY, Mode=TwoWay}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="10"
                                    CornerRadius="1">
                                    <Border.Width>
                                        <MultiBinding Converter="{zoomAndPan:ZoomAndPanViewBoxClampConverter}"
                                                  ConverterParameter="width">
                                            <Binding Mode="OneWay" Path="ZoomAndPanContent.ContentViewportWidth" />
                                            <Binding Mode="OneWay" Path="ZoomAndPanContent.ContentOffsetX" />
                                            <Binding Mode="OneWay" Path="ZoomAndPanContent.ViewportZoom" />
                                            <Binding Path="ZoomAndPanContent" />
                                        </MultiBinding>
                                    </Border.Width>
                                    <Border.Height>
                                        <MultiBinding Converter="{zoomAndPan:ZoomAndPanViewBoxClampConverter}"
                                                  ConverterParameter="height">
                                            <Binding Mode="OneWay" Path="ZoomAndPanContent.ContentViewportHeight" />
                                            <Binding Mode="OneWay" Path="ZoomAndPanContent.ContentOffsetY" />
                                            <Binding Mode="OneWay" Path="ZoomAndPanContent.ViewportZoom" />
                                            <Binding Path="ZoomAndPanContent" />
                                        </MultiBinding>
                                    </Border.Height>
                                </Border>
                                <Border Name="PART_SizingBorder"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="10"
                                    CornerRadius="1"
                                    Visibility="Hidden" />
                            </Canvas>
                        </Viewbox>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <!--Input Bindings or Keyboard Shortcuts-->
    <Window.InputBindings>
        <KeyBinding Key="Minus" Command="{Binding ElementName=ZoomAndPanControl, Path=ZoomOutCommand}"
                    Gesture="CTRL+Minus" />
        <KeyBinding Key="Subtract" Command="{Binding ElementName=ZoomAndPanControl, Path=ZoomOutCommand}"
                    Gesture="CTRL+Subtract" />
        <KeyBinding Key="Add" Command="{Binding ElementName=ZoomAndPanControl, Path=ZoomInCommand}" Gesture="CTRL+Add" />
        <KeyBinding Key="OemPlus" Command="{Binding ElementName=ZoomAndPanControl, Path=ZoomInCommand}"
                    Gesture="CTRL+OemPlus" />
        <KeyBinding Key="Back" Command="{Binding ElementName=ZoomAndPanControl, Path=UndoZoomCommand}"
                    Gesture="CTRL+Back" />
        <KeyBinding Command="{Binding ElementName=ZoomAndPanControl, Path=UndoZoomCommand}" Gesture="CTRL+Z" />
        <KeyBinding Command="{Binding ElementName=ZoomAndPanControl, Path=RedoZoomCommand}" Gesture="CTRL+Y" />
        <KeyBinding Command="{Binding ElementName=ZoomAndPanControl, Path=ZoomOutCommand}" Gesture="SHIFT+Minus" />
        <KeyBinding Command="{Binding ElementName=ZoomAndPanControl, Path=ZoomInCommand}" Gesture="SHIFT+OemPlus" />
    </Window.InputBindings>

    <Grid>
        <Grid Grid.Column="0" Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>

            <!--This is the control wraps the ZoomAndPanControl in a ScrollViewer-->
            <zoomAndPan:ZoomAndPanScrollViewer Name="ZoomAndPanControl"
                                               Grid.Row="0"
                                               Background="#AAF2F2F2"
                                               MinimumZoomType="MinimumZoom"
                                               UseAnimations="False"
                                               ViewportZoom="0"
                                               ZoomAndPanInitialPosition="FitScreen">
                <!--This is the content that is displayed.-->
                <Grid x:Name="theGrid">
                    <!--This Canvas is the main part of the content that is displayed.-->
                    <Image Source="sampleImage.jpeg" />
                </Grid>
            </zoomAndPan:ZoomAndPanScrollViewer>

            <StackPanel Name="ViewBoxContent" Grid.Row="2" Margin="5,5,5,5" HorizontalAlignment="Center"
                        Orientation="Horizontal">
                <!--  The fit button.  Causes the content to be scaled so that it fits in the viewport.-->
                <Button Width="55" Command="{Binding ElementName=ZoomAndPanControl, Path=UndoZoomCommand}"
                        Content="Undo" />
                <Border Width="5" />
                <Button Width="55" Command="{Binding ElementName=ZoomAndPanControl, Path=RedoZoomCommand}"
                        Content="Redo" />
                <Border Width="5" />
                <Button Width="55" Command="{Binding ElementName=ZoomAndPanControl, Path=FitCommand}" Content="Fit" />
                <Border Width="5" />
                <Button Width="55" Command="{Binding ElementName=ZoomAndPanControl, Path=FillCommand}" Content="Fill" />
                <Border Width="5" />
                <Button Width="55" Command="{Binding ElementName=ZoomAndPanControl, Path=ZoomPercentCommand}"
                        Content="100%" />
                <Border Width="5" />
                <Button Width="55" Command="{Binding ElementName=ZoomAndPanControl, Path=ZoomPercentCommand}"
                        Content="200%">
                    <Button.CommandParameter>
                        <system:Double>200</system:Double>
                    </Button.CommandParameter>
                </Button>
                <Border Width="5" />
                <Button Width="55" Command="{Binding ElementName=ZoomAndPanControl, Path=ZoomRatioFromMinimumCommand}"
                        Content="4x">
                    <Button.CommandParameter>
                        <system:Double>4</system:Double>
                    </Button.CommandParameter>
                </Button>

                <Border Width="5" />
                <TextBlock Width="65" VerticalAlignment="Center"
                           Text="{Binding ElementName=ZoomAndPanControl, Path=ViewportZoom, StringFormat=p1}"
                           TextAlignment="Right" />
                <Border Width="10" />
                <!--  Button to zoom out.  -->
                <Button Width="35" Command="{Binding ElementName=ZoomAndPanControl, Path=ZoomOutCommand}" Content="-" />
                <Border Width="5" />

                <!--  Slider to change the current zoom level.  -->
                <Slider Width="150" LargeChange="20" Maximum="10"
                        Minimum="{Binding ElementName=ZoomAndPanControl, Path=ZoomAndPanContent.MinimumZoomClamped}"
                        SmallChange=".1" TickFrequency="10" TickPlacement="TopLeft"
                        Value="{Binding ElementName=ZoomAndPanControl, Path=ViewportZoom, Mode=TwoWay}" />

                <Border Width="5" />
                <!--                Button to zoom in.            -->
                <Button Width="35" Command="{Binding ElementName=ZoomAndPanControl, Path=ZoomInCommand}" Content="+" />
                <Border Width="5" />
            </StackPanel>
        </Grid>
        <!--#endregion-->
    </Grid>
</Window>
